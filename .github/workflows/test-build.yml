name: Test & Build
on: [push, pull_request]
env:
  POSTGRES_USER: simplified_test
  POSTGRES_PASSWORD: test
  POSTGRES_DB: simplified_circulation_test

jobs:
  test:
    name: ${{ matrix.module }} Tests (Py ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]
        module: [Api, Core]

    # We want to run on external PRs, but not on our own internal PRs as they'll be run
    # by the push to the branch. This prevents duplicated runs on internal PRs.
    # Some discussion of this here:
    # https://github.community/t/duplicate-checks-on-push-and-pull-request-simultaneous-event/18012
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Apt Packages
        run: |
          sudo apt-get update
          sudo apt-get install --yes libxmlsec1-dev libxml2-dev

      - name: Install Poetry
        uses: ./.github/actions/poetry

      - name: Install Tox
        run: |
          pip install --upgrade pip
          pip install tox tox-gh-actions tox-docker

      - name: Run Tests
        run: tox
        env:
          MODULE: ${{ matrix.module }}

  build-docker-images:
    name: Build and push docker images
    runs-on: ubuntu-latest

    # We want to run on external PRs, but not on our own internal PRs as they'll be run
    # by the push to the branch. This prevents duplicated runs on internal PRs.
    # Some discussion of this here:
    # https://github.community/t/duplicate-checks-on-push-and-pull-request-simultaneous-event/18012
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set outputs for build steps
        id: outputs
        run: |
          echo "::set-output name=version::$(git describe --tags)"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create version file
        run: echo "${{ steps.outputs.version }}" > .version
        if: ${{ steps.outputs.version != '' }}

      - name: Build and test circ-scripts
        uses: ./.github/actions/docker-build
        with:
          target: scripts
          run-opts: >-
            --network ${{job.services.postgres.network}}
            -e SIMPLIFIED_PRODUCTION_DATABASE="postgres://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@postgres:5432/${{ env.POSTGRES_DB }}"
          test-script: ./docker/ci/test_scripts.sh

      - name: Build and test circ-webapp
        uses: ./.github/actions/docker-build
        with:
          target: webapp
          run-opts: >-
            --network ${{job.services.postgres.network}}
            -e SIMPLIFIED_PRODUCTION_DATABASE="postgres://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@postgres:5432/${{ env.POSTGRES_DB }}"
          test-script: ./docker/ci/test_webapp.sh

      - name: Push circ-scripts
        uses: ./.github/actions/docker-push
        with:
          target: scripts
          image: circ-scripts

      - name: Push circ-webapp
        uses: ./.github/actions/docker-push
        with:
          target: webapp
          image: circ-webapp

      - name: Push circ-exec
        uses: ./.github/actions/docker-push
        with:
          target: exec
          image: circ-exec
